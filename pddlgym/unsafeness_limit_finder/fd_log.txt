[t=0.000270s, 944 KB] usage: 
pddlgym/pddlgym_planners/FD/builds/release/bin/downward.exe [OPTIONS] --search SEARCH < OUTPUT

* SEARCH (SearchAlgorithm): configuration of the search algorithm
* OUTPUT (filename): translator output

Options:
--help [NAME]
    Prints help for all heuristics, open lists, etc. called NAME.
    Without parameter: prints help for everything available
--internal-plan-file FILENAME
    Plan will be output to a file called FILENAME

--internal-previous-portfolio-plans COUNTER
    This planner call is part of a portfolio which already created
    plan files FILENAME.1 up to FILENAME.COUNTER.
    Start enumerating plan files with COUNTER+1, i.e. FILENAME.COUNTER+1

See https://www.fast-downward.org for details.
Usage error occurred.
[t=0.000357s, 944 KB] usage: 
pddlgym/pddlgym_planners/FD/builds/release/bin/downward.exe [OPTIONS] --search SEARCH < OUTPUT

* SEARCH (SearchAlgorithm): configuration of the search algorithm
* OUTPUT (filename): translator output

Options:
--help [NAME]
    Prints help for all heuristics, open lists, etc. called NAME.
    Without parameter: prints help for everything available
--internal-plan-file FILENAME
    Plan will be output to a file called FILENAME

--internal-previous-portfolio-plans COUNTER
    This planner call is part of a portfolio which already created
    plan files FILENAME.1 up to FILENAME.COUNTER.
    Start enumerating plan files with COUNTER+1, i.e. FILENAME.COUNTER+1

See https://www.fast-downward.org for details.
Usage error occurred.
[t=0.000248s, 936 KB] usage: 
pddlgym/pddlgym_planners/FD/builds/release/bin/downward.exe [OPTIONS] --search SEARCH < OUTPUT

* SEARCH (SearchAlgorithm): configuration of the search algorithm
* OUTPUT (filename): translator output

Options:
--help [NAME]
    Prints help for all heuristics, open lists, etc. called NAME.
    Without parameter: prints help for everything available
--internal-plan-file FILENAME
    Plan will be output to a file called FILENAME

--internal-previous-portfolio-plans COUNTER
    This planner call is part of a portfolio which already created
    plan files FILENAME.1 up to FILENAME.COUNTER.
    Start enumerating plan files with COUNTER+1, i.e. FILENAME.COUNTER+1

See https://www.fast-downward.org for details.
Usage error occurred.
[t=0.000248s, 948 KB] usage: 
pddlgym/pddlgym_planners/FD/builds/release/bin/downward.exe [OPTIONS] --search SEARCH < OUTPUT

* SEARCH (SearchAlgorithm): configuration of the search algorithm
* OUTPUT (filename): translator output

Options:
--help [NAME]
    Prints help for all heuristics, open lists, etc. called NAME.
    Without parameter: prints help for everything available
--internal-plan-file FILENAME
    Plan will be output to a file called FILENAME

--internal-previous-portfolio-plans COUNTER
    This planner call is part of a portfolio which already created
    plan files FILENAME.1 up to FILENAME.COUNTER.
    Start enumerating plan files with COUNTER+1, i.e. FILENAME.COUNTER+1

See https://www.fast-downward.org for details.
Usage error occurred.
[t=0.000272s, 952 KB] usage: 
pddlgym/pddlgym_planners/FD/builds/release/bin/downward.exe [OPTIONS] --search SEARCH < OUTPUT

* SEARCH (SearchAlgorithm): configuration of the search algorithm
* OUTPUT (filename): translator output

Options:
--help [NAME]
    Prints help for all heuristics, open lists, etc. called NAME.
    Without parameter: prints help for everything available
--internal-plan-file FILENAME
    Plan will be output to a file called FILENAME

--internal-previous-portfolio-plans COUNTER
    This planner call is part of a portfolio which already created
    plan files FILENAME.1 up to FILENAME.COUNTER.
    Start enumerating plan files with COUNTER+1, i.e. FILENAME.COUNTER+1

See https://www.fast-downward.org for details.
Usage error occurred.
[t=0.000306s, 944 KB] reading input...
[t=0.000846s, 956 KB] done reading input!
[t=0.003713s, 1272 KB] Initializing landmark cut heuristic...
[t=0.003767s, 1272 KB] Building successor generator...done!
[t=0.003849s, 1272 KB] peak memory difference for successor generator creation: 0 KB
[t=0.003861s, 1272 KB] time for successor generation creation: 0.000021s
[t=0.003876s, 1272 KB] Variables: 7
[t=0.003886s, 1272 KB] FactPairs: 36
[t=0.003896s, 1272 KB] Bytes per state: 4
[t=0.003947s, 1272 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.003978s, 1272 KB] Initial state is a dead end.
[t=0.003989s, 1272 KB] Initial heuristic value for lmcut: infinity
[t=0.003998s, 1272 KB] pruning method: none
[t=0.004008s, 1272 KB] Completely explored state space -- no solution!
[t=0.004017s, 1272 KB] Actual search time: 0.000014s
[t=0.004028s, 1272 KB] Expanded 0 state(s).
[t=0.004028s, 1272 KB] Reopened 0 state(s).
[t=0.004028s, 1272 KB] Evaluated 1 state(s).
[t=0.004028s, 1272 KB] Evaluations: 1
[t=0.004028s, 1272 KB] Generated 0 state(s).
[t=0.004028s, 1272 KB] Dead ends: 0 state(s).
[t=0.004028s, 1272 KB] Number of registered states: 1
[t=0.004028s, 1272 KB] Int hash set load factor: 1/1 = 1.000000
[t=0.004028s, 1272 KB] Int hash set resizes: 0
[t=0.004028s, 1272 KB] Search time: 0.000081s
[t=0.004028s, 1272 KB] Total time: 0.004028s
Search stopped without finding a solution.
[t=0.000305s, 944 KB] reading input...
[t=0.001233s, 968 KB] done reading input!
[t=0.004139s, 1288 KB] Initializing landmark cut heuristic...
[t=0.004327s, 1288 KB] Building successor generator...done!
[t=0.004456s, 1288 KB] peak memory difference for successor generator creation: 0 KB
[t=0.004472s, 1288 KB] time for successor generation creation: 0.000069s
[t=0.004502s, 1288 KB] Variables: 7
[t=0.004512s, 1288 KB] FactPairs: 37
[t=0.004522s, 1288 KB] Bytes per state: 4
[t=0.004574s, 1288 KB] Conducting best first search with reopening closed nodes, (real) bound = 2147483647
[t=0.004647s, 1288 KB] New best heuristic value for lmcut: 17
[t=0.004659s, 1288 KB] g=0, 1 evaluated, 0 expanded
[t=0.004671s, 1288 KB] f = 17, 1 evaluated, 0 expanded
[t=0.004688s, 1288 KB] Initial heuristic value for lmcut: 17
[t=0.004699s, 1288 KB] pruning method: none
[t=0.004740s, 1288 KB] New best heuristic value for lmcut: 16
[t=0.004751s, 1288 KB] g=1, 2 evaluated, 1 expanded
[t=0.004786s, 1288 KB] New best heuristic value for lmcut: 15
[t=0.004797s, 1288 KB] g=2, 3 evaluated, 2 expanded
[t=0.004830s, 1288 KB] New best heuristic value for lmcut: 14
[t=0.004840s, 1288 KB] g=3, 4 evaluated, 3 expanded
[t=0.004933s, 1288 KB] New best heuristic value for lmcut: 13
[t=0.004944s, 1288 KB] g=4, 8 evaluated, 4 expanded
[t=0.005019s, 1288 KB] f = 18, 11 evaluated, 6 expanded
[t=0.005076s, 1288 KB] f = 19, 13 evaluated, 8 expanded
[t=0.005239s, 1288 KB] New best heuristic value for lmcut: 12
[t=0.005252s, 1288 KB] g=7, 20 evaluated, 12 expanded
[t=0.005297s, 1288 KB] New best heuristic value for lmcut: 11
[t=0.005308s, 1288 KB] g=8, 22 evaluated, 13 expanded
[t=0.005353s, 1288 KB] New best heuristic value for lmcut: 10
[t=0.005364s, 1288 KB] g=9, 24 evaluated, 14 expanded
[t=0.005391s, 1288 KB] New best heuristic value for lmcut: 9
[t=0.005402s, 1288 KB] g=10, 25 evaluated, 15 expanded
[t=0.005429s, 1288 KB] New best heuristic value for lmcut: 8
[t=0.005440s, 1288 KB] g=11, 26 evaluated, 16 expanded
[t=0.005493s, 1288 KB] New best heuristic value for lmcut: 7
[t=0.005504s, 1288 KB] g=12, 29 evaluated, 17 expanded
[t=0.005528s, 1288 KB] New best heuristic value for lmcut: 6
[t=0.005539s, 1288 KB] g=13, 30 evaluated, 18 expanded
[t=0.005577s, 1288 KB] New best heuristic value for lmcut: 5
[t=0.005588s, 1288 KB] g=14, 32 evaluated, 19 expanded
[t=0.005629s, 1288 KB] New best heuristic value for lmcut: 4
[t=0.005640s, 1288 KB] g=15, 34 evaluated, 20 expanded
[t=0.005662s, 1288 KB] New best heuristic value for lmcut: 3
[t=0.005673s, 1288 KB] g=16, 35 evaluated, 21 expanded
[t=0.005713s, 1288 KB] New best heuristic value for lmcut: 2
[t=0.005724s, 1288 KB] g=17, 38 evaluated, 22 expanded
[t=0.005743s, 1288 KB] New best heuristic value for lmcut: 1
[t=0.005791s, 1288 KB] g=18, 39 evaluated, 23 expanded
[t=0.005815s, 1288 KB] New best heuristic value for lmcut: 0
[t=0.005826s, 1288 KB] g=19, 40 evaluated, 24 expanded
[t=0.005855s, 1288 KB] Solution found!
[t=0.005867s, 1288 KB] Actual search time: 0.001163s
move-unsafe-copy-1 l-1-1 l-2-1 (1)
move l-2-1 l-3-1 (1)
collect r3 l-3-1 (1)
move-unsafe-copy-1 l-3-1 l-4-1 (1)
move l-4-1 l-5-1 (1)
collect r5 l-5-1 (1)
move-unsafe-copy-1 l-5-1 l-4-1 (1)
move l-4-1 l-3-1 (1)
move-unsafe-copy-1 l-3-1 l-3-2 (1)
move l-3-2 l-3-3 (1)
move-unsafe-copy-1 l-3-3 l-2-3 (1)
move l-2-3 l-1-3 (1)
collect r1 l-1-3 (1)
move-unsafe-copy-1 l-1-3 l-1-4 (1)
move l-1-4 l-1-5 (1)
collect r2 l-1-5 (1)
move-unsafe-copy-1 l-1-5 l-2-5 (1)
move l-2-5 l-3-5 (1)
collect r4 l-3-5 (1)
[t=0.005878s, 1288 KB] Plan length: 19 step(s).
[t=0.005878s, 1288 KB] Plan cost: 19
[t=0.005878s, 1288 KB] Expanded 25 state(s).
[t=0.005878s, 1288 KB] Reopened 0 state(s).
[t=0.005878s, 1288 KB] Evaluated 42 state(s).
[t=0.005878s, 1288 KB] Evaluations: 42
[t=0.005878s, 1288 KB] Generated 65 state(s).
[t=0.005878s, 1288 KB] Dead ends: 0 state(s).
[t=0.005878s, 1288 KB] Expanded until last jump: 8 state(s).
[t=0.005878s, 1288 KB] Reopened until last jump: 0 state(s).
[t=0.005878s, 1288 KB] Evaluated until last jump: 13 state(s).
[t=0.005878s, 1288 KB] Generated until last jump: 19 state(s).
[t=0.005878s, 1288 KB] Number of registered states: 42
[t=0.005878s, 1288 KB] Int hash set load factor: 42/64 = 0.656250
[t=0.005878s, 1288 KB] Int hash set resizes: 6
[t=0.005878s, 1288 KB] Search time: 0.001305s
[t=0.005878s, 1288 KB] Total time: 0.005878s
Solution found.
